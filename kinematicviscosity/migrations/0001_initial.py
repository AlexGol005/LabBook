# Generated by Django 4.0.4 on 2022-05-27 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ViscosityMJL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, db_index=True, verbose_name='Дата')),
                ('name', models.CharField(default='0', max_length=100, verbose_name='Наименование')),
                ('lot', models.CharField(max_length=100, verbose_name='Партия')),
                ('ndocument', models.CharField(choices=[('ГОСТ 33', 'ГОСТ 33'), ('МИ-01', 'МИ-01'), ('оценка', 'оценка вязкости')], default='МИ-01', max_length=100, verbose_name='Метод испытаний')),
                ('temperature', models.DecimalField(decimal_places=2, default='0', max_digits=5, verbose_name='Температура, ℃')),
                ('termostatition', models.BooleanField(blank=True, verbose_name='Термостатировано не менее 20 минут')),
                ('temperatureCheck', models.BooleanField(blank=True, verbose_name='Температура контролируется внешним поверенным термометром')),
                ('termometer', models.CharField(default='0', max_length=10, verbose_name='Внутренний номер термометра')),
                ('ViscosimeterNumber1', models.CharField(default='0', max_length=10, verbose_name='Заводской номер вискозиметра № 1')),
                ('Konstant1', models.DecimalField(decimal_places=10, default='0', max_digits=20, verbose_name='Константа вискозиметра № 1')),
                ('ViscosimeterNumber2', models.CharField(default='0', max_length=10, null=True, verbose_name='Заводской номер вискозиметра № 2')),
                ('Konstant2', models.DecimalField(decimal_places=10, default='0', max_digits=20, null=True, verbose_name='Константа вискозиметра № 2')),
                ('plustimeminK1T1', models.DecimalField(decimal_places=0, max_digits=3, null=True, verbose_name='Время истечения K1T1, + мин')),
                ('plustimesekK1T1', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Время истечения K1T1, + cек')),
                ('plustimeminK1T2', models.DecimalField(decimal_places=0, max_digits=3, null=True, verbose_name='Время истечения K1T2, + мин')),
                ('plustimesekK1T2', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Время истечения K1T2, + cек')),
                ('plustimeminK2T1', models.DecimalField(decimal_places=0, max_digits=3, null=True, verbose_name='Время истечения K2T1, + мин')),
                ('plustimesekK2T1', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Время истечения K2T1, + cек')),
                ('plustimeminK2T2', models.DecimalField(decimal_places=0, max_digits=3, null=True, verbose_name='Время истечения K2T2, + мин')),
                ('plustimesekK2T2', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Время истечения K2T2, + cек')),
                ('timeK1T1_sec', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Время истечения K1T1, в секундах')),
                ('timeK1T2_sec', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Время истечения K1T2, в секундах')),
                ('timeK2T1_sec', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Время истечения K2T1, в секундах')),
                ('timeK2T2_sec', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Время истечения K2T2, в секундах')),
                ('timeK1_avg', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Время истечения среднее 1, в секундах')),
                ('timeK2_avg', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Время истечения среднее 2, в секундах')),
                ('viscosity1', models.DecimalField(decimal_places=7, default=0.0, max_digits=20, null=True, verbose_name='Вязкость кинематическая 1')),
                ('viscosity2', models.DecimalField(decimal_places=7, default=0.0, max_digits=20, null=True, verbose_name='Вязкость кинематическая 2')),
                ('viscosityAVG', models.DecimalField(decimal_places=7, default=0.0, max_digits=20, null=True, verbose_name='Вязкость кинематическая среднее')),
                ('resultMeas', models.CharField(default='неудовлетворительно', max_length=100, null=True, verbose_name='Результат измерений уд/неуд')),
                ('cause', models.CharField(default='', max_length=100, null=True, verbose_name='Причина')),
                ('delta', models.CharField(max_length=100, null=True, verbose_name='Не превышает Δ')),
                ('termostatition_words', models.CharField(max_length=1, null=True, verbose_name='Термостатировано не менее 20 минут - словами')),
                ('constit', models.CharField(choices=[('да', 'Проба содержит октол/нефть'), ('нет', 'В пробе нет октола/нефти'), ('другое', 'другое')], default='Проба содержит октол/нефть', max_length=300, null=True)),
                ('kriteriy', models.DecimalField(decimal_places=1, max_digits=2, null=True, verbose_name='Критерий приемлемости измерений')),
                ('accMeasurement', models.DecimalField(decimal_places=1, max_digits=5, null=True, verbose_name='Оценка приемлемости измерений')),
                ('relerror', models.DecimalField(decimal_places=1, default=0.3, max_digits=3, null=True, verbose_name='Относительная  погрешность')),
                ('abserror', models.FloatField(null=True, verbose_name='Абсолютная  погрешность')),
                ('abserror_text', models.CharField(default='', max_length=300, null=True)),
                ('certifiedValue', models.DecimalField(decimal_places=10, max_digits=20, null=True, verbose_name='Аттестованное значение')),
                ('certifiedValue_text', models.CharField(default='', max_length=300, null=True)),
                ('oldCertifiedValue', models.CharField(default='', max_length=300, null=True, verbose_name='Предыдущее аттестованное значение')),
                ('deltaOldCertifiedValue', models.DecimalField(decimal_places=4, max_digits=10, null=True, verbose_name='Оценка разницы с предыдущим значением')),
                ('deltaOldCertifiedValue_text', models.CharField(default='', max_length=300, null=True)),
                ('resultWarning', models.CharField(default='', max_length=300, null=True)),
                ('performer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Измерение кинематической вязкости',
                'verbose_name_plural': 'Измерения кинематической вязкости',
            },
        ),
        migrations.CreateModel(
            name='CommentsKinematicviscosity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, db_index=True, verbose_name='Дата')),
                ('name', models.TextField(default='', max_length=1000, verbose_name='Содержание')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Наименование')),
                ('forNote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='kinematicviscosity.viscositymjl', verbose_name='К странице аттестации')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['-pk'],
            },
        ),
    ]
